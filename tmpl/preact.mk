# Copyright 2020 Benjamin 'Benno' Falkner
#
# Permission is hereby granted, free of charge, to any person obtaining a copy 
# of this software and associated documentation files (the "Software"), to 
# deal in the Software without restriction, including without limitation the 
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
# sell copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in 
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

new: install_deps $(n)/views.py $(n)/urls.py $(n)/templates/$(n)/index.html $(n)/src/index.js $(n)/Makefile
	echo "/^]\ni\n\tpath('$(path)',include('$(n).urls')),\n.\nwq\n" | ed $(shell basename $(CURDIR))/urls.py &> /dev/null
	echo "/^from django.urls.\nc\nfrom django.urls import path, include\n.\nwq\n" | ed $(shell basename $(CURDIR))/urls.py &> /dev/null

install_deps:
	npm init
	npm i webpack webpack-cli --save-dev
	npm i @babel/core babel-loader @babel/preset-env babel-preset-preact babel-plugin-transform-class-properties --save-dev
	npm i preact preact-dom preact-router --save-dev
	npm i file-loader --save-dev
	npm i css-loader extract-text-webpack-plugin@next mini-css-extract-plugin node-sass sass-loader style-loader --save-dev
	mkdir -p $(n)/src

$(n)/src/index.scss:
	mkdir -p $(n)/src
	@echo "@charset \"UTF-8\";" > $@
	@echo "@import url(\"https://fonts.googleapis.com/css?family=Quicksand&display=swap\");" >> $@
	@echo "$$family-sans-serif: \"Quicksand\", sans-serif;" >> $@

$(n)/src/index.js: $(n)/src/components/App.js $(n)/src/index.scss
	mkdir -p $(n)/src
	@echo "import App from './components/App';" > $@
	@echo "import './index.scss';" >> $@

$(n)/src/components/App.js:
	mkdir -p $(n)/src/components
	@echo "import { h, render, Component } from 'preact';\n" >> $@
	@echo "class App extends Component {" >> $@
	@echo "\trender() {" >> $@
	@echo "\t\treturn (" >> $@
	@echo "\t\t\t<h1>Hello World!</h1>" >> $@
	@echo "\t\t)" >> $@
	@echo "\t}" >> $@
	@echo "}" >> $@
	@echo "render(<App />, document.body);" >> $@

.babelrc:
	@echo "{\n\t\"presets\": [\n\t\t\"@babel/preset-env\", \"babel-preset-preact\"\n\t],\n\t\"plugins\": [\t\t\"transform-class-properties\"\t]\n}" > $@

$(n).webpack.config.js: .babelrc
	@echo "// autogenerated by django.mk" >> $@
	@echo "const path = require('path');" >> $@
	@echo "const MiniCssExtractPlugin = require('mini-css-extract-plugin')\n" >> $@
	@echo "module.exports = {" >> $@
	@echo "\tentry: './$(n)/src/index.js'," >> $@
	@echo "\tdevtool: 'source-map'," >> $@
	@echo "\toutput: {" >> $@
	@echo "\t\tpath: path.resolve(__dirname, '$(n)/static/$(n)')," >> $@
	@echo "\t\tfilename: 'main.js'" >> $@
	@echo "\t}," >> $@
	@echo "\tmodule: {" >> $@
	@echo "\t\trules: [" >> $@
	@echo "\t\t{" >> $@
	@echo "\t\t\t\ttest: /.js$$/," >> $@
	@echo "\t\t\t\texclude: /node_modules/," >> $@
	@echo "\t\t\t\tuse: {" >> $@
	@echo "\t\t\t\t\tloader: 'babel-loader'" >> $@
	@echo "\t\t\t\t}" >> $@
	@echo "\t\t}," >> $@
	@echo "\t\t{" >> $@
	@echo "\t\t	test: /.(png|jpe?g|gif|svg)$$/," >> $@
	@echo "\t\t	use: [{ loader: 'file-loader', options: { outputPath: 'images' }}]" >> $@
	@echo "\t\t}," >> $@
	@echo "\t\t{" >> $@
	@echo "\t\t	test: /.(woff|woff2|ttf|otf|eot)$$/," >> $@
	@echo "\t\t	use: [{ loader: 'file-loader', options: { outputPath: 'fonts' }}]" >> $@
	@echo "\t\t}," >> $@
	@echo "\t\t{" >> $@
	@echo "\t\t\ttest: /.scss$$/," >> $@
	@echo "\t\t\tuse: [" >> $@
	@echo "\t\t\t\t\tMiniCssExtractPlugin.loader," >> $@
	@echo "\t\t\t\t\t{" >> $@
	@echo "\t\t\t\t\t\tloader: 'css-loader'" >> $@
	@echo "\t\t\t\t\t}," >> $@
	@echo "\t\t\t\t\t{" >> $@
	@echo "\t\t\t\t\t\tloader: 'sass-loader'," >> $@
	@echo "\t\t\t\t\t\toptions: {" >> $@
	@echo "\t\t\t\t\t\t\tsourceMap: true," >> $@
	@echo "\t\t\t\t\t\t}" >> $@
	@echo "\t\t\t\t\t}" >> $@
	@echo "\t\t\t\t]" >> $@
	@echo "\t\t}]" >> $@
	@echo "\t}," >> $@
	@echo "\tplugins: [" >> $@
	@echo "\t\tnew MiniCssExtractPlugin({" >> $@
	@echo "\t\t\tfilename: 'style.css'" >> $@
	@echo "\t\t})," >> $@
	@echo "\t]" >> $@
	@echo "};" >> $@

$(n)/static/$(n)/style.css:
	mkdir -p $(n)/static/$(n)
	@echo "@charset \"utf-8\";" > $@

$(n)/templates/$(n)/index.html: $(n)/static/$(n)/style.css
	mkdir -p $(n)/templates/$(n)
	@echo "<!doctype html>" > $@
	@echo "<html>" >> $@
	@echo "  {% load static %}" >> $@
	@echo "  <head>" >> $@
	@echo "    <meta charset=\"utf-8\">" >> $@
	@echo "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">" >> $@
	@echo "    <link rel=\"stylesheet\" href=\"{% static \"$(n)/style.css\" %}\">" >> $@
	@echo "    <title>$(n)</title>" >> $@
	@echo "  </head>" >> $@
	@echo "  <body>" >> $@
	@echo "    <div id="app" ><!-- React --></div>" >> $@
	@echo "    <script src=\"{% static \"$(n)/main.js\" %}\"></script>" >> $@
	@echo "  </body>" >> $@
	@echo "</html>" >> $@

.PHONY: $(n)/views.py
$(n)/views.py: 
	@echo "# autogenerated by django.mk" > $@
	@echo "from django.shortcuts import render\n" >> $@
	@echo "def index(request):" >> $@
	@echo "\treturn render(request, '$(n)/index.html')" >> $@

$(n)/urls.py:
	@echo "# autogenerated by django.mk" > $@
	@echo "from django.urls import path, include" >> $@
	@echo "from . import views\n" >> $@
	@echo "urlpatterns = ["  >> $@
	@echo "\tpath('$(n)', views.index)" >> $@
	@echo "]" >> $@


$(n)/Makefile: $(n).webpack.config.js
	@echo "# autogenerated by django.mk" > $@
	@echo "run:" >> $@
	@echo "\twebpack --watch --mode development --config $(n).webpack.config.js\n" >> $@
	@echo "build:" >> $@
	@echo "\twebpack --mode production --config $(n).webpack.config.js " >> $@
